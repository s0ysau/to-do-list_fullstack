// import {useState, useEffect} from 'react'
// import TodoList from '../TodoList/TodoList'

// export default function TodoPage ({
//   todos,
//   addTodo,
//   completeTodo,
//   deleteTodo,
//   editTodoText
//   }) 
// {
//   const [{todos}, setTodos] = useState([])


  //index
  /*  // index
  const getTodo = async () => {
    try {
      const response = await fetch('/api/todolist', {
        method: "GET",
        header: {
          'Content-Type': 'application/json'
        }
      })
      const data = await response.json()
      setTodos(data)
    } catch (error) {
    console.error(error)
    }
  }
  //delete
  const deleteTodo = async (id) => {
    try {
      const response = await fetch(`./api/todolist/${id}`, {
        method: "DELETE",
        headers: {
          'Content-Type': 'application/json'
        }
      })
    } catch (error) {
      console.error(error)
    }
  }
  // update 
  const editTodoText = async (id, updatedData) => {
    try {
      const response = await fetch(`/api/todolist/${id}`, {
        method: "PUT",
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({...updatedData})
      })
    } catch (error) {
      console.error(error)
    }
  }
  // create 
  const addTodo = async () => {
    try {
      const response = await fetch(`api/todolist`, {
        method: "POST",
        headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify({...newTodo})
      })
      const data = await response.json()
      setFoundTodos(data)
      setNewTodo({
        title: '',
        completed: false
      })
    } catch (error) {
      console.error(error)
    }
  }
  
  const addTodo = (evt) => {
    const newTodo = { text: evt.target.value, id: Date.now(), completed: false}
    setTodos([newTodo, ...todos])
    evt.target.value = ""
  }

  const completeTodo = (id, e) => {
    const todosCopy = [...todos]
    const indexOfTodo = todosCopy.findIndex((i) => i.id === id )
    todosCopy[indexOfTodo].completed = !todosCopy[indexOfTodo].completed
    setTodos(todosCopy)
}

const editTodoText = (id, e) => {
  const todosCopy = [...todos]
  const indexOfTodo = todosCopy.findIndex((i) => i.id === id)
  todosCopy[indexOfTodo].text = e.target.value
  setTodos([...todosCopy])
  e.target.value = ""
}

const deleteTodo = (id) => {
  const todosCopy = [...todos]
  const indexOfTodo = todosCopy.findIndex((i) => i.id === id)
  todosCopy.splice(indexOfTodo, 1)
  setTodos([...todosCopy])
};
  

  
  */







//   return (
//     <>
//       <TodoList
//       addTodo={addTodo}
//       completeTodo={completeTodo}
//       editTodoText={editTodoText}
//       deleteTodo={deleteTodo}
//       todos={todos}
//       />
//     </>
//   )
// }


/*
//   const addTodo = (evt) => {
//     const newTodo = { text: evt.target.value, id: Date.now(), completed: false}
//     setTodos([newTodo, ...todos])
//     evt.target.value = ""
//   }

//   const completeTodo = (id, e) => {
//     const todosCopy = [...todos]
//     const indexOfTodo = todosCopy.findIndex((i) => i.id === id )
//     todosCopy[indexOfTodo].completed = !todosCopy[indexOfTodo].completed
//     setTodos(todosCopy)
// }

// const editTodoText = (id, e) => {
//   const todosCopy = [...todos]
//   const indexOfTodo = todosCopy.findIndex((i) => i.id === id)
//   todosCopy[indexOfTodo].text = e.target.value
//   setTodos([...todosCopy])
//   e.target.value = ""
// }

// const deleteTodo = (id) => {
//   const todosCopy = [...todos]
//   const indexOfTodo = todosCopy.findIndex((i) => i.id === id)
//   todosCopy.splice(indexOfTodo, 1)
//   setTodos([...todosCopy])
// };


*/